03/14 트랙킹 테스트

저번 테스트 때 stanley method로 tracking 했을 때 delta값을 고정시키지 않고 테스트를 해보는게 좋다고 생각을 했었기에
생성 주기와 상관없이 delta의 고정을 풀고 tracking을 했다.

그러나 stanley method로 tracking을 하면 경로가 생성될 때마다 steer가 이상하게 뒤틀리는 현상이 발생하게 됨
    ㄴ 이 부분은 path planning의 문제일 수도 있다고 생각함

또한 RRT*+EB의 알고리즘이 완성되어 주행 테스트를 해보았다.

1. 초기값 rrt*(goal_bias : 0.2, epsilon: 0.2, iter : 1000, obs_r : 0.7, 중앙선 셋팅 : 3m 간격) elastic band(d_min : 0.6, d_max : 3.0) 
    ㄴ 이 상태로 주행을 했을 때 장애물 감지는 하는 것 같은데 steer를 너무 작게 틀어서 장애물 회피가 불가능했다.
    ㄴ elastic band의 범위도 조절해줘야 할 것 같다.

2. 변경값 obs_r : 1, d_min : 0.4, d_max: 0.8
    ㄴ 이 상태로 주행을 하면 경로가 생성이 되다가 장애물 근방에 오면 생성이 안됨
    ㄴ 아마도 현재는 중앙선도 장애물 취급이라서 obs_r이 너무 크면 rrt*가 안되는 것 같다.

3. 변경값 obs_r : 0.8
    ㄴ 이 상태로 주행을 하면 초기 주행과 크게 다르지 않는듯
    ㄴ rviz상에서 보이는 경로는 나쁘지 않는 듯한데 아마 생성 주기가 문제가 있다고 판단됨

4. 변경값 iter : 500 goal_bias: 0.5
    ㄴ 샘플링 횟수를 줄이는 대신 goal_bias 확률을 늘려서 시도해봤다.
    ㄴ 아직도 조금 느린 것 같다
    ㄴ 중앙선이 장애물 취급이라서 경로의 생성을 방해하고 있다고 생각이 되어서 중앙선 없이 생성해보기로 했다.

5. 변경값 iter : 300 epsilon : 0.3 중앙선 없음
    ㄴ 샘플링 횟수를 더 줄이고 epsilon값을 살짝 키우고 중앙선 없이 시도해봤다.
    ㄴ 확실히 중앙선이 없으니까 경로 생성이 잘 되는 것 같다.
    ㄴ 중앙선에 대한 처리를 따로 넣어주는게 맞는 듯(rrt*에서는 선 판정, elastic band에서는 원 판정으로 해야 할 듯)

6. 최종값 rrt*(goal_bias : 0.5, epsilon: 0.3, iter : 300, obs_r: 0.8, 중앙선 없음) elastic band(d_min : 0.4, d_max : 0.8)

개선사항: 중앙선에 대한 처리를 장애물과 똑같이 하면 안될 것 같다.(rrt*와 elastic band 둘다 조절해야 할 듯)
        goal_bias, epsilon, iter를 잘 조절해서 경로를 생성해야 할 것 같다.