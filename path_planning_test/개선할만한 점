[지역 경로 생성 방식]


현재 macaron 차량은 1초에 10번 gps_tracking 함수를 실행하고 있다.
gps_tracking 함수에는 지역경로 생성을 하는 함수가 포함되어 있기 때문에 지역경로 또한 1초에 10번씩 생성되는 상황이다.

즉, 생성한 경로를 전부 따라가기도 전에 지역경로를 새로 생성하고 그것을 stanley method or pure pursuit을 하고 있다.
이러한 방식에서 pure pursuit에서는 LD의 길이가 있기 때문에 문제되지 않을수 있다.

그러나, stanley method 방식은 LD의 길이가 정해진것이 아닌 지역경로에서 현재 위치와 가장 가까운 waypoint를 골라서 그곳을 기준으로
steer값을 정하기 때문에 현재 방식대로 gps_tracking 함수에서 지역 경로를 생성하게 되면 다음과 같은 일이 일어난다.



1. 지역 경로 생성
2. 가장 가까운 포인트를 찾는다.(현재 위치)
3. 이제 생성된 지역 경로를 따라가야지
4. 0.1초만에 새로운 경로가 생성된다.
5. 가장 가까운 포인트를 찾는다.(현재 위치)
6. 이제 생성된 지역경로를 따라가야지
7. 0.1초만에 새로운 경로가 생성된다.
(무한반복)


#stanley_controller_PID.py를 보면서 읽으면 이해하기 쉬움

이러한 상황이 나오기 때문에 이전에 stanley method를 처음 적용했을때 차량이 직진하게 된 것이다.
현재는 이러한 문제를 현재 경로와의 각도차이(theta_e)는 변하지 않지만, 현재 차량과 경로와의 거리(cross_track_error)는 가장 가까운 waypoint의
인덱스에서 +3 된 waypoint를 사용해서 경로를 따라갈 수 있도록 처리하고 있다.

그러나 이 방식은 문제될 요소가 있다고 생각한다.
이 방식은 직진구간에서 cross_track_error값이 현재 위치에서 3개의 인덱스만큼 떨어진 waypoint만큼의 거리로 고정되기 때문에 steer가 틀어지게 된다.

이 상태를 해결하기 위해서는 gps_tracking 함수에서는 Tracking만하고 Trajectory planning은 따로 노드(rosrun할 수 있는)로써 생성하고 Trajectory planner가
만든 경로를 path_planning_tracking.py에서 subscribe해서 callback함수에서 경로를 설정하는 방식으로 gps_tracking 함수와는 별개로 지역 경로가 설정되어야 한다.



지역 경로를 생성하는 방식에는 일단 2가지 방식을 생각해봤다.

1. 일정주기에 지역경로를 생성한다.(예를 들면 3초에 한번 생성)

2. 지역경로를 생성하는 규칙을 만든다.(예를 들면 장애물을 감지할 시)
ㄴ 이러한 방식은 좀 더 논의를 해봐야 할 것 같다.


